---
export interface Props {
	date: Date;
}

const { date } = Astro.props;

const getDateName = (n: number, str: string): string => {
  let dateName = str;
  if (n > 1) {
    dateName = dateName + 's';
  }

  return `${n} ${dateName} ago`;
}

const generatePostedDate = (date: Date) => {
  const now = new Date();
  const diff = Math.floor(now.getTime() - date.getTime());
  const day = 1000 * 60 * 60 * 24;

  const days = Math.floor(diff / day);
  if (days < 1) {
    return 'Today';
  }

  if (days < 7) {
    return getDateName(days, 'day');
  }

  const weeks = Math.floor(days / 7);
  if (weeks < 4) {
    return getDateName(weeks, 'week');
  }

  const months = Math.floor(days / 31);
  if (months < 12) {
    return getDateName(months, 'month');
  }

  const years = Math.floor(months / 12);
  return getDateName(years, 'year');
}
---

<time datetime={date.toISOString()}>
	{ generatePostedDate(date) }
</time>
