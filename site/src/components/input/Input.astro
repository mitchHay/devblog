---
import type { ImageMetadata } from "astro";
import type { HTMLAttributes } from "astro/types";
import { Image } from "astro:assets";

type Props = {
  placeholder: string;
  label: string;
  image?: {
    src: ImageMetadata;
    id: string;
    altText: string;
  };
} & HTMLAttributes<"input">;

const { placeholder, label, image, id, class: className } = Astro.props;
let classes = ["input"];
if (className) {
  classes.push(className);
}
---

<div class={classes.join(" ")}>
  {
    !!image && (
      <Image
        src={image.src}
        width={14}
        height={14}
        alt={image.altText}
        id={image.id}
      />
    )
  }
  <input placeholder={placeholder} id={id} aria-label={label} />
</div>

<style lang="scss">
  @use "./Input.scss" as *;

  .input {
    @include input-styles();
  }
</style>

<script define:vars={{ image, id }}>
  const inputEl = document.getElementById(id);

  if (image) {
    const inputSearchEl = document.getElementById(image.id);

    inputSearchEl.onclick = () => {
      inputEl.focus();
    };
  }

  inputEl.onfocus = () => {
    inputEl.parentElement.classList.add("focused");
  };

  inputEl.onblur = () => {
    inputEl.parentElement.classList.remove("focused");
  };
</script>
